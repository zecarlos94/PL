%{

#include <stdio.h>
#include <string.h>
#include <errno.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include "lista.h"

char *author;
GRAPH autores;
FILE *fp;

void printAutores();

%}

%x AUTOR

%%

					GRAPH linha; autores = NULL; author = malloc(30 * sizeof(char)); strcpy(author, "Tim Nicholson"); insert(autores, author); 
author[ ]*\=[ ]*[{"]			{linha = NULL; BEGIN AUTOR;}
<AUTOR>[ ]*\n?[ ]*and[ ]*\n?[ ]*	{}
<AUTOR>([A-Z]\.?[a-z][ ]?)*		{insert(linha, yytext);}
<AUTOR>[ ]*["}]\,			{getAutores(autores, linha, author); BEGIN INITIAL;}
.|\n					{}
<*><<EOF>>				{printAutores(); free(linha); free(autores); return 0;}

%%

void printAutores() {
	FILE *fp = fopen("graph.dot", "w");
	GRAPH aux = autores;
	fprintf(fp, "digraph finite_state_machine {\n");
	fprintf(fp, "	rankdir=LR;\n");
	fprintf(fp, "	size=\"20,20\"\n");
	while(aux != NULL) {
		fprintf(fp, "node [shape = circle];");
		fprintf(fp, " \"%s\" ", aux->author);
		aux = aux->next;
	}
	aux = autores;
	while(aux != NULL) {
		if(strncmp(author, aux->author, strlen(author)) == 0) fprintf(fp, "\n\"%s\"", author);
		else fprintf(fp, " -> \"%s\" [label = \"%d\"];", aux->author, aux->num);
		aux = aux->next;
	}
	fprintf(fp, "\n}");
	fclose(fp);
}
